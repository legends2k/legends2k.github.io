<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sundaram Ramaswamy on Bits of Insight</title>
    <link>https://legends2k.github.io/</link>
    <description>Recent content in Sundaram Ramaswamy on Bits of Insight</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>Sundaram Ramaswamy</copyright>
    <lastBuildDate>Fri, 24 Feb 2017 12:14:41 +0530</lastBuildDate>
    
	<atom:link href="https://legends2k.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Life in the Valley</title>
      <link>https://legends2k.github.io/post/valley_review/</link>
      <pubDate>Sat, 09 Dec 2017 10:35:43 +0530</pubDate>
      
      <guid>https://legends2k.github.io/post/valley_review/</guid>
      <description>I recently moved from India to the Silicon Valley; it&amp;rsquo;s almost a year now. Like all humans I developed opinions about my new environment; I want to them record under notes-to-self. Before proceeding, I&amp;rsquo;ll lay down the disclaimer: these are just my views and you&amp;rsquo;re totally entitled to your&amp;rsquo;s. Though I try to be reasonable, absolute logic isn&amp;rsquo;t just impractical but is inapplicable since feelings about one&amp;rsquo;s environment are always rooted in emotions, upbringing, habit, etc.</description>
    </item>
    
    <item>
      <title>My Inspirers</title>
      <link>https://legends2k.github.io/post/inspirers/</link>
      <pubDate>Thu, 02 Mar 2017 22:41:05 +0530</pubDate>
      
      <guid>https://legends2k.github.io/post/inspirers/</guid>
      <description>I have been inspired by many unknown personalities all over the internet and otherwise, but a few linger on my mind consistently to be listed here. Not all of them are authors but they work inspired me in some way.
Kalki R. Krishnamurthy A great writer, and freedom fighter, who effortlessly balanced content against gripping narration. He pioneered in writing under a unique genre &amp;mdash; Historical fiction &amp;mdash; by mixing imagination with facts in the right amount and proved that it can be done with great success.</description>
    </item>
    
    <item>
      <title>hello, world</title>
      <link>https://legends2k.github.io/post/hello_world/</link>
      <pubDate>Fri, 24 Feb 2017 12:36:30 +0530</pubDate>
      
      <guid>https://legends2k.github.io/post/hello_world/</guid>
      <description>Experience I have been writing on StackOverflow for quite a while now. I don&amp;rsquo;t know if these can be called writing since it&amp;rsquo;s purely technical. However, helping newbies with verbose answers has stoked some confidence in me; confidence that I am good at explaining things to people. Additionally, I recently gave an interactive presentation on a math-heavy topic that garnered good reviews; it took 2 months for me to prepare this slide deck viewable on a browser; more than half the time was spent not on technicalities but on the material.</description>
    </item>
    
    <item>
      <title>Useful GCC options</title>
      <link>https://legends2k.github.io/note/useful_gcc_opts/</link>
      <pubDate>Wed, 08 Feb 2017 16:45:02 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/useful_gcc_opts/</guid>
      <description>Here are some of the useful, but not widely known, options of GCC that I want to document.
gcc -dumpspecs  Gives the specifications with which GCC was built.
gcc -fstack-usage  Gives the stack usage function-wise for the compiled translation unit; this is helpful in measuring runtime memory usage. See the manual for details on deciphering its output.
# get macros defined when the language is C++ cpp -xc++ -dM /dev/null # get macros defined when the language is C cpp -dM /dev/null  Prints the macros defined when the preprocessor was called.</description>
    </item>
    
    <item>
      <title>Emacs C&#43;&#43; auto-complete setup on Windows</title>
      <link>https://legends2k.github.io/note/install-irony-win32/</link>
      <pubDate>Tue, 24 Jan 2017 17:33:27 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/install-irony-win32/</guid>
      <description>This note is a guide to setup auto completion for C and C++ modes in Emacs on Windows with minimal manual work. We need Clang, Irony and some Company; we additionally require CMake and MinGW for building something small. Although there are many methods of getting this working, this was the most performant and least time-taking solution for me, so I&amp;rsquo;m documenting it here.
The general installation instructions provided in Irony&amp;rsquo;s README works but it asks you to build the complete Clang compiler from source for a single DLL (libclang.</description>
    </item>
    
    <item>
      <title>Lua Setup on Windows</title>
      <link>https://legends2k.github.io/note/lua_rocks/</link>
      <pubDate>Fri, 23 Sep 2016 17:00:46 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/lua_rocks/</guid>
      <description>Ingredients  CMake MinGW compiler (one of MinGW, TDM, MinGW-W64, …) Lua binaries LuaRocks setup binaries ZeroBrane Studio  Steps Involved  Make sure the commands cmake and mingw32-gcc are accessible from a general Command Prompt  Install CMake; straight-forward Install MinGW64; choose i686-6.2.0-posix-dwarf-rt_v5-rev0. Both archive and installer works. mingw-w64 project&amp;rsquo;s MinGW only has gcc.exe while luarocks expects mingw32-gcc.exe; create a symbolic link (mklink)  Download lua-5.3.3_Win32_bin.zip from LuaForge Lua Binaries project  Make sure Lua and MinGW are of the same arch This contains the binaries (.</description>
    </item>
    
    <item>
      <title>Blog – fit and finish</title>
      <link>https://legends2k.github.io/note/site_customizations/</link>
      <pubDate>Fri, 12 Aug 2016 17:00:46 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/site_customizations/</guid>
      <description>I did quite a few things to get this blog up and running the way you see it now.
Steps I Still Remember  Install Hugo; just extract and put in PATH &amp;mdash; can&amp;rsquo;t be simpler. Create a dummy site using the Quickstart guide; straight forward. Install Ghostwriter inside the themes directory.  Hugo recommends that customizations be done outside the theme&amp;rsquo;s directory tree to clearly differentiate customizations. I followed it.</description>
    </item>
    
    <item>
      <title>Hello, Hugo!</title>
      <link>https://legends2k.github.io/note/hello_hugo/</link>
      <pubDate>Mon, 11 Jul 2016 17:00:46 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/hello_hugo/</guid>
      <description>Many static site generators are coming up these days; 175 and still counting. Apart from the prime selling point of content creation from the comfort of your favourite text editor in Markdown, most have a wide gamut of themes to choose from. You are free to remix the theme to your taste however you see fit. Want to change the line spacing and paragraph alignment? Sure thing! Don&amp;rsquo;t like anything?</description>
    </item>
    
  </channel>
</rss>