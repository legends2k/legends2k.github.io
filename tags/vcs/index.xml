<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vcs on Bits of Insight</title>
    <link>https://legends2k.github.io/tags/vcs/</link>
    <description>Recent content in Vcs on Bits of Insight</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>Sundaram Ramaswamy</copyright>
    <lastBuildDate>Wed, 20 Feb 2019 19:56:56 +0530</lastBuildDate>
    
	<atom:link href="https://legends2k.github.io/tags/vcs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Concepts</title>
      <link>https://legends2k.github.io/note/git_concepts/</link>
      <pubDate>Wed, 20 Feb 2019 19:56:56 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/git_concepts/</guid>
      <description>Git is a distributed VCS; each repo can be both a server/client Honestly, git (sub)commands are just graph manipulating commands Every codebase is made of a graph; each commit is a node with edges to parent(s)  Git diagrams often have arrows backwards for this reason only  Git stores snapshots not differences i.e. entire file contents &amp;mdash; as a blob  Every commit is a complete snapshot of tracked repo contents + (0 or more) parent ID(s) identified with a 40-byte SHA1-digested hash This way, the exact state of your project can be referred to, copied, or restored at any time    &amp;ldquo;finally figuring out that git commands are strangely named graph manipulation commands &amp;ndash; creating/deleting nodes, moving around pointers&amp;rdquo; &amp;ndash; Kent Beck</description>
    </item>
    
    <item>
      <title>Git: Pushing to a Fork</title>
      <link>https://legends2k.github.io/note/push_fork/</link>
      <pubDate>Thu, 19 Apr 2018 13:57:03 -0700</pubDate>
      
      <guid>https://legends2k.github.io/note/push_fork/</guid>
      <description>Fork? Food!? When you fork1 a repository in GitHub, from your repository&amp;rsquo;s viewpoint, the one you forked from is called the &amp;ldquo;upstream&amp;rdquo;; a term used commonly in the FOSS world for a long time, to denote the original authors (or their repository) of a software. Fork is a concept introduced by GitHub (the code hosting platform) for separation of concerns; Git (the version control system) itself doesn&amp;rsquo;t have a concept of fork; from its viewpoint, it&amp;rsquo;s just another remote repository.</description>
    </item>
    
  </channel>
</rss>