<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Bits of Insight</title><link>https://legends2k.github.io/tags/c++/</link><description>Recent content in C++ on Bits of Insight</description><generator>Hugo 0.125.2</generator><language>en-uk</language><copyright>Sundaram Ramaswamy</copyright><lastBuildDate>Wed, 20 Mar 2024 15:07:02 +0530</lastBuildDate><atom:link href="https://legends2k.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>Assertions vs if checks</title><link>https://legends2k.github.io/note/assert_vs_if/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://legends2k.github.io/note/assert_vs_if/</guid><description>TL;DR Any program can have two classes of issues:
Runtime problems: situations programmer foresaw and handled; expected. E.g. invalid inputs, no access to resource, unreachable network, … Bugs: programmer mistakes; unexpected. E.g. buffer overflow, access violation, … There are different tools to deal with each; don’t conflate one with the other.
An assertion is just a validation of a programmer expectation; it “fires” when the expectation is betrayed.
(1) is familiar to most; use one of your language-provided feature including if, try-catch-throw, etc.</description></item><item><title>C++ Primer</title><link>https://legends2k.github.io/note/c++_primer/</link><pubDate>Thu, 06 Sep 2018 17:00:46 -0700</pubDate><guid>https://legends2k.github.io/note/c++_primer/</guid><description>Within C++, there is a much smaller and cleaner language struggling to get out. — Bjarne Stroustrup
C++ is vast. If you’re beginning to learn it, the internet has enough discouraging words. Just start learning instead of reading about it i.e. don’t learn about C++, learn C++. The innumerable topics might be daunting, but don’t worry. Knowing a few concepts will get you productive. More than the actual content, this article aims to give you keywords of that set, so that you can pursue them further.</description></item><item><title>Emacs C++ auto-complete on Windows</title><link>https://legends2k.github.io/note/c++_irony_win32/</link><pubDate>Tue, 24 Jan 2017 17:33:27 +0530</pubDate><guid>https://legends2k.github.io/note/c++_irony_win32/</guid><description>This note is a guide to setup auto completion for C and C++ modes in Emacs on Windows with minimal manual work. We need Clang, Irony and some Company; we additionally require CMake and MinGW for building something small. Although there are many methods of getting this working, this was the most performant and least time-taking solution for me, so I&amp;rsquo;m documenting it here.
The general installation instructions provided in Irony&amp;rsquo;s README works but it asks you to build the complete Clang compiler from source for a single DLL (libclang.</description></item></channel></rss>