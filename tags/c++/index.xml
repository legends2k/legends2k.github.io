<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on Bits of Insight</title>
    <link>https://legends2k.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on Bits of Insight</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>Sundaram Ramaswamy</copyright>
    <lastBuildDate>Wed, 13 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://legends2k.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assertions vs if checks</title>
      <link>https://legends2k.github.io/note/assert_vs_if/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://legends2k.github.io/note/assert_vs_if/</guid>
      <description>TL;DR   Any program can have two classes of issues:
  Bugs: unexpected, programmer mistakes. E.g. buffer overflow, access violation, …
  Runtime issues: issues programmer expected and handled in code. E.g. invalid inputs, no access to resource, unreachable network, …
  (1) is unknown to the programmer; (2) is known and handled in code. There are different tools to deal with each; don’t conflate one with the other.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Primer</title>
      <link>https://legends2k.github.io/note/c&#43;&#43;_primer/</link>
      <pubDate>Thu, 06 Sep 2018 17:00:46 -0700</pubDate>
      
      <guid>https://legends2k.github.io/note/c&#43;&#43;_primer/</guid>
      <description>Within C++, there is a much smaller and cleaner language struggling to get out. — Bjarne Stroustrup
 C++ is vast. If you’re beginning to learn it, the internet has enough discouraging words. Just start learning instead of reading about it i.e. don’t learn about C++, learn C++. The innumerable topics might be daunting, but don’t worry. Knowing a few concepts will get you productive. More than the actual content, this article aims to give you keywords of that set, so that you can pursue them further.</description>
    </item>
    
    <item>
      <title>Emacs C&#43;&#43; auto-complete on Windows</title>
      <link>https://legends2k.github.io/note/c&#43;&#43;_irony_win32/</link>
      <pubDate>Tue, 24 Jan 2017 17:33:27 +0530</pubDate>
      
      <guid>https://legends2k.github.io/note/c&#43;&#43;_irony_win32/</guid>
      <description>This note is a guide to setup auto completion for C and C++ modes in Emacs on Windows with minimal manual work. We need Clang, Irony and some Company; we additionally require CMake and MinGW for building something small. Although there are many methods of getting this working, this was the most performant and least time-taking solution for me, so I&amp;rsquo;m documenting it here.
The general installation instructions provided in Irony&amp;rsquo;s README works but it asks you to build the complete Clang compiler from source for a single DLL (libclang.</description>
    </item>
    
  </channel>
</rss>
